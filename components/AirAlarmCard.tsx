import React, { useState, useEffect } from 'react';
import {
  View,
  Text,
  StyleSheet,
  ActivityIndicator,
  TouchableOpacity,
} from 'react-native';
import { useTranslation } from 'react-i18next';
import { 
  fetchAirAlarmStatus,
  AirAlarmData,
  getAlarmIcon,
  getAlarmColor 
} from '../services/airAlarmService';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞—Ä—Ç–∫–∏ –ø–æ–≤—ñ—Ç—Ä—è–Ω–æ—ó —Ç—Ä–∏–≤–æ–≥–∏ (—Ç–æ—á–Ω—ñ —Ä–æ–∑–º—ñ—Ä–∏ 169x118px)
export const AirAlarmCard: React.FC = () => {
  const { t } = useTranslation();
  const [alarmData, setAlarmData] = useState<AirAlarmData | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(false);

  // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ç—Ä–∏–≤–æ–≥–∏ –ø—Ä–∏ –º–æ–Ω—Ç—É–≤–∞–Ω–Ω—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    loadAlarmData();
    
    // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–æ–∂–Ω—ñ 30 —Å–µ–∫—É–Ω–¥
    const interval = setInterval(loadAlarmData, 30000);
    return () => clearInterval(interval);
  }, []);

  // –§—É–Ω–∫—Ü—ñ—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ç—Ä–∏–≤–æ–≥–∏
  const loadAlarmData = async () => {
    try {
      console.log('üîî –ü–æ—á–∞—Ç–æ–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ç—Ä–∏–≤–æ–≥–∏...');
      setError(false);
      
      const data = await fetchAirAlarmStatus();
      console.log('üîî –û—Ç—Ä–∏–º–∞–Ω—ñ –¥–∞–Ω—ñ —Ç—Ä–∏–≤–æ–≥–∏ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ:', data);
      
      setAlarmData(data);
      
      if (data) {
        console.log('üîî –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Å—Ç–∞–Ω —Ç—Ä–∏–≤–æ–≥–∏:', {
          region: data.regionName,
          isActive: data.isAlarmActive,
          status: data.isAlarmActive ? '–¢–†–ò–í–û–ì–ê' : '–ù–ï–ú–ê–Ñ –¢–†–ò–í–û–ì–ò'
        });
      }
    } catch (err) {
      console.error('‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ç—Ä–∏–≤–æ–≥–∏:', err);
      setError(true);
      // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –¥–µ—Ñ–æ–ª—Ç–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è –ó–∞–ø–æ—Ä—ñ–∑—å–∫–æ—ó –æ–±–ª–∞—Å—Ç—ñ
      const fallbackData = {
        regionId: '7',
        regionName: '–º. –ó–∞–ø–æ—Ä—ñ–∂–∂—è —Ç–∞ –ó–∞–ø–æ—Ä—ñ–∑—å–∫–∞ —Ç–µ—Ä–∏—Ç–æ—Ä—ñ–∞–ª—å–Ω–∞ –≥—Ä–æ–º–∞–¥–∞',
        isAlarmActive: false, // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å —Ç—Ä–∏–≤–æ–≥–∏ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –¥–ª—è –ó–∞–ø–æ—Ä—ñ–∑—å–∫–æ—ó –æ–±–ª–∞—Å—Ç—ñ
        lastUpdate: new Date().toISOString(),
      };
      console.log('üîî –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ fallback –¥–∞–Ω—ñ:', fallbackData);
      setAlarmData(fallbackData);
    } finally {
      setLoading(false);
      console.log('üîî –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç—Ä–∏–≤–æ–≥–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    }
  };

  // –Ø–∫—â–æ –π–¥–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
  if (loading) {
    return (
      <View style={styles.card}>
        <ActivityIndicator size="small" color="#E41B85" />
        <Text style={styles.loadingText}>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</Text>
      </View>
    );
  }

  return (
    <View style={styles.card}>
      {/* –¢–µ–∫—Å—Ç —Ä–µ–≥—ñ–æ–Ω—É (–¥–∏–Ω–∞–º—ñ—á–Ω–∏–π) */}
      <Text style={styles.regionText}>
        {alarmData?.regionName || '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...'}
      </Text>

      {/* –°—Ç–∞—Ç—É—Å —Ç—Ä–∏–≤–æ–≥–∏ –∑ —ñ–∫–æ–Ω–∫–æ—é –ø–æ —Ü–µ–Ω—Ç—Ä—É (–¥–∏–Ω–∞–º—ñ—á–Ω–∏–π) */}
      <View style={styles.statusContainer}>
        {alarmData?.isAlarmActive ? (
          <Text style={styles.triangleIcon}>‚ö†</Text>
        ) : (
          <View style={styles.checkCircle}>
            <Text style={styles.checkMark}>‚úì</Text>
          </View>
        )}
        <Text style={styles.statusText}>
          {alarmData?.isAlarmActive ? '–¢—Ä–∏–≤–æ–≥–∞' : '–ù–µ–º–∞—î —Ç—Ä–∏–≤–æ–≥–∏'}
        </Text>
      </View>
    </View>
  );
};

const styles = StyleSheet.create({
  card: {
    backgroundColor: '#fff',
    borderRadius: 16, // –†–∞–¥—ñ—É—Å –∑–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—è 16px
    padding: 12,
    shadowColor: '#000',
    shadowOffset: {
      width: 0,
      height: 2,
    },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
    width: 169, // –¢–æ—á–Ω–∞ —à–∏—Ä–∏–Ω–∞ 169px
    height: 118, // –¢–æ—á–Ω–∞ –≤–∏—Å–æ—Ç–∞ 118px
    justifyContent: 'space-between',
  },
  regionText: {
    fontSize: 11,
    color: '#666',
    lineHeight: 14,
    fontFamily: 'e-Ukraine',
    textAlign: 'left',
  },
  statusContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
  },
  checkCircle: {
    width: 20,
    height: 20,
    borderRadius: 10,
    backgroundColor: '#E41B85',
    justifyContent: 'center',
    alignItems: 'center',
    marginRight: 8,
  },
  checkMark: {
    fontSize: 12,
    color: '#fff',
    fontWeight: 'bold',
  },
  statusText: {
    fontSize: 14,
    fontWeight: '600',
    color: '#E41B85',
    fontFamily: 'e-Ukraine',
  },
  triangleIcon: {
    fontSize: 20,
    color: '#E41B85',
    marginRight: 8,
    fontWeight: 'bold',
  },
  loadingText: {
    textAlign: 'center',
    color: '#666',
    fontSize: 14,
    fontFamily: 'e-Ukraine',
  },
}); 